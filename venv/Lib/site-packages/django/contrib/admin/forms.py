from django.contrib.auth.forms import AuthenticationForm, PasswordChangeForm
from django.core.exceptions import ValidationError
from django.utils.translation import gettext_lazy as _

class AdminAuthenticationForm(AuthenticationForm):
    """
    A custom authentication form used in the admin app.
    """

    error_messages = {
        **AuthenticationForm.error_messages,
        "invalid_login": _(
            "Please enter the correct %(id)s and password for a staff "
            "account. Note that both fields may be case-sensitive."
        ),
    }
    required_css_class = "required"

    def confirm_login_allowed(self, user):
        super().confirm_login_allowed(user)
        if not user.is_staff:
            raise ValidationError(
                self.error_messages["invalid_login"],
                code="invalid_login",
                params={"id": self.id_field.verbose_name},
            )

    def clean(self):
        cleaned_data = super().clean()
        self.cleaned_data["id"] = cleaned_data.get("id")
        return cleaned_data

    def get_user_id(self):
        return self.cleaned_data.get("id")
    
class AdminPasswordChangeForm(PasswordChangeForm):
    required_css_class = "required"
